// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using s31367_kolokwium2.Data;

#nullable disable

namespace s31367_kolokwium2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250610130854_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("s31367_kolokwium2.Models.Entities.Map", b =>
                {
                    b.Property<int>("MapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MapId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MapId");

                    b.ToTable("Map");

                    b.HasData(
                        new
                        {
                            MapId = 1,
                            Name = "Inferno",
                            Type = "Bomb Defusal"
                        },
                        new
                        {
                            MapId = 2,
                            Name = "Mirage",
                            Type = "Bomb Defusal"
                        },
                        new
                        {
                            MapId = 3,
                            Name = "Dust II",
                            Type = "Bomb Defusal"
                        });
                });

            modelBuilder.Entity("s31367_kolokwium2.Models.Entities.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatchId"));

                    b.Property<decimal>("BestRating")
                        .HasColumnType("decimal(4,2)");

                    b.Property<int>("MapId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Team1Score")
                        .HasColumnType("int");

                    b.Property<int>("Team2Score")
                        .HasColumnType("int");

                    b.Property<int>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("MatchId");

                    b.HasIndex("MapId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Match");

                    b.HasData(
                        new
                        {
                            MatchId = 1,
                            BestRating = 1.25m,
                            MapId = 1,
                            MatchDate = new DateTime(2025, 7, 2, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Team1Score = 16,
                            Team2Score = 12,
                            TournamentId = 1
                        },
                        new
                        {
                            MatchId = 2,
                            BestRating = 1.32m,
                            MapId = 2,
                            MatchDate = new DateTime(2025, 7, 3, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Team1Score = 10,
                            Team2Score = 16,
                            TournamentId = 1
                        },
                        new
                        {
                            MatchId = 3,
                            BestRating = 1.15m,
                            MapId = 1,
                            MatchDate = new DateTime(2025, 8, 5, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Team1Score = 16,
                            Team2Score = 8,
                            TournamentId = 2
                        });
                });

            modelBuilder.Entity("s31367_kolokwium2.Models.Entities.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PlayerId");

                    b.ToTable("Player");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            BirthDate = new DateTime(2000, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Alex",
                            LastName = "Smith"
                        },
                        new
                        {
                            PlayerId = 2,
                            BirthDate = new DateTime(1998, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Doe"
                        });
                });

            modelBuilder.Entity("s31367_kolokwium2.Models.Entities.PlayerMatch", b =>
                {
                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("MVPs")
                        .HasColumnType("int");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("MatchId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Player_Match");

                    b.HasData(
                        new
                        {
                            MatchId = 1,
                            PlayerId = 1,
                            MVPs = 3,
                            Rating = 1.25m
                        },
                        new
                        {
                            MatchId = 2,
                            PlayerId = 1,
                            MVPs = 2,
                            Rating = 1.10m
                        },
                        new
                        {
                            MatchId = 3,
                            PlayerId = 2,
                            MVPs = 4,
                            Rating = 1.32m
                        });
                });

            modelBuilder.Entity("s31367_kolokwium2.Models.Entities.Tournament", b =>
                {
                    b.Property<int>("TournamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TournamentId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TournamentId");

                    b.ToTable("Tournament");

                    b.HasData(
                        new
                        {
                            TournamentId = 1,
                            EndDate = new DateTime(2025, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CS2 Summer Cup",
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TournamentId = 2,
                            EndDate = new DateTime(2025, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pro League Season 1",
                            StartDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("s31367_kolokwium2.Models.Entities.Match", b =>
                {
                    b.HasOne("s31367_kolokwium2.Models.Entities.Map", "Map")
                        .WithMany("Matches")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("s31367_kolokwium2.Models.Entities.Tournament", "Tournament")
                        .WithMany("Matches")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Map");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("s31367_kolokwium2.Models.Entities.PlayerMatch", b =>
                {
                    b.HasOne("s31367_kolokwium2.Models.Entities.Match", "Match")
                        .WithMany("PlayerMatches")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("s31367_kolokwium2.Models.Entities.Player", "Player")
                        .WithMany("PlayerMatches")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("s31367_kolokwium2.Models.Entities.Map", b =>
                {
                    b.Navigation("Matches");
                });

            modelBuilder.Entity("s31367_kolokwium2.Models.Entities.Match", b =>
                {
                    b.Navigation("PlayerMatches");
                });

            modelBuilder.Entity("s31367_kolokwium2.Models.Entities.Player", b =>
                {
                    b.Navigation("PlayerMatches");
                });

            modelBuilder.Entity("s31367_kolokwium2.Models.Entities.Tournament", b =>
                {
                    b.Navigation("Matches");
                });
#pragma warning restore 612, 618
        }
    }
}
